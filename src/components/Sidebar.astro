---
import ThemeToggle from "./ThemeToggle.astro";

const navigation = [
  { name: "Home", href: "/" },
  { name: "About", href: "/about" },
  { name: "Projects", href: "/projects" },
  { name: "Certificates", href: "/cert" }
  //   { name: "Blog", href: "/blog" }
];
---

<div class="sidebar-container">
  <aside
    id="sidebar"
    class="fixed left-0 top-0 h-screen w-64 bg-white dark:bg-dark-lighter border-r border-slate-200 dark:border-dark-card px-6 py-8 lg:translate-x-0 -translate-x-full flex flex-col"
  >
    <div class="mb-8">
      <h1 class="text-2xl font-bold text-primary">Supakornn</h1>
      <p class="text-sm text-slate-600 dark:text-slate-400">Developer | Hacker</p>
    </div>

    <nav>
      <ul class="space-y-2">
        {
          navigation.map((item) => (
            <li>
              <a
                href={item.href}
                class="block px-4 py-2 rounded-md text-slate-700 dark:text-slate-300 hover:text-primary dark:hover:text-primary hover:bg-slate-100 dark:hover:bg-dark-card transition-all duration-200"
                data-astro-reload="false"
                transition:name={`nav-${item.href}`}
              >
                {item.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </aside>

  <div class="fixed left-4 bottom-4 flex flex-col items-center gap-2 z-50">
    <ThemeToggle />
    <button
      id="sidebar-toggle"
      class="p-2 bg-primary text-black rounded-full shadow-lg hover:bg-primary/90"
      aria-label="Toggle Sidebar"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"
        ></path>
      </svg>
    </button>
  </div>
</div>

<script>
  let isHidden = localStorage.getItem("sidebarHidden") === "true";
  const sidebar = document.getElementById("sidebar");
  const toggle = document.getElementById("sidebar-toggle");
  const toggleIcon = toggle?.querySelector("svg");

  function updateSidebar() {
    if (window.innerWidth >= 1024) {
      sidebar?.style.setProperty("transform", isHidden ? "translateX(-100%)" : "translateX(0)");
      document.documentElement.classList.toggle("sidebar-hidden", isHidden);
    } else {
      sidebar?.style.setProperty("transform", isHidden ? "translateX(0)" : "translateX(-100%)");
      document.documentElement.classList.add("sidebar-hidden");
    }
    toggleIcon?.style.setProperty("transform", isHidden ? "rotate(180deg)" : "rotate(0)");
  }

  updateSidebar();
  window.addEventListener("resize", updateSidebar);

  toggle?.addEventListener("click", () => {
    if (window.innerWidth >= 1024) {
      isHidden = !isHidden;
      localStorage.setItem("sidebarHidden", isHidden.toString());
      updateSidebar();
    } else {
      isHidden = !isHidden;
      sidebar?.style.setProperty("transform", isHidden ? "translateX(-100%)" : "translateX(0)");
      document.documentElement.classList.toggle("sidebar-hidden", isHidden);
    }
    updateSidebar();
  });
</script>

<style>
  .sidebar-container {
    position: fixed;
    z-index: 50;
  }
</style>
